2015-04-14 15:11:56,092 - pyslave.magic - INFO - Pyslave loaded
2015-04-14 15:13:04,519 - pyslave.magic - INFO - Pyslave loaded
2015-04-14 15:13:12,515 - pyslave.instruments - INFO - Opening Yokogawa 7651 GPIB0::1::INSTR as dcpwr1.
2015-04-14 15:13:12,657 - pyslave.instruments - INFO - Opening HEWLETT-PACKARD E3631A GPIB0::5::INSTR as dcpwr2.
2015-04-14 15:13:12,686 - pyslave.instruments - INFO - Opening Stanford_Research_Systems SR830 GPIB0::8::INSTR as lockin1.
2015-04-14 15:39:17,984 - pyslave.magic - INFO - Pyslave loaded
2015-04-14 15:39:29,884 - pyslave.instruments - INFO - Opening Yokogawa 7651 GPIB0::1::INSTR as dcpwr1.
2015-04-14 15:39:30,049 - pyslave.instruments - INFO - Opening HEWLETT-PACKARD E3631A GPIB0::5::INSTR as dcpwr2.
2015-04-14 15:39:30,078 - pyslave.instruments - INFO - Opening Stanford_Research_Systems SR830 GPIB0::8::INSTR as lockin1.
2015-04-14 15:40:35,349 - pyslave.magic - INFO - Creating monitor script :

import time
fig, ax = subplots()
monitor_out = dict(values=[], times=[])
t0 = time.time()
def script_monitor(thread):
    while True:
        val = dmm1.measurement.read(1)
        thread.display('Monitored value '+str(val))
        monitor_out['values'].append(val)
        monitor_out['times'].append(time.time()-t0)
        ax.cla()
        ax.plot(monitor_out['times'], monitor_out['values'])
        thread.draw()
        time.sleep(1)
        thread.pause()
        if thread.stopflag : break
2015-04-14 15:40:35,351 - pyslave.slave - INFO - Script is running...
2015-04-14 15:40:35,384 - pyslave.slave - INFO - Script finished with an error.
2015-04-14 15:46:58,413 - pyslave.magic - INFO - Creating monitor script :

import time
fig, ax = subplots()
monitor_out = dict(values=[], times=[])
t0 = time.time()
def script_monitor(thread):
    while True:
        val = myfun()
        thread.display('Monitored value '+str(val))
        monitor_out['values'].append(val)
        monitor_out['times'].append(time.time()-t0)
        ax.cla()
        ax.plot(monitor_out['times'], monitor_out['values'])
        thread.draw()
        time.sleep(1)
        thread.pause()
        if thread.stopflag : break
2015-04-14 15:46:58,414 - pyslave.slave - INFO - Script is running...
2015-04-14 16:14:56,095 - pyslave.slave - INFO - Creating converted script IV_converted.py :
# Auto generated script file

# Auto generated script file

import time
fig, ax = subplots()

voltage = linspace(-25,25,501)

res = ones_like(voltage)*nan

# Main script function
def script_main(thread):
    for index,v in enumerate(voltage):
        thread.pause()
        # Change parameter
        dcpwr1.setVoltage(float(v))
        time.sleep(3)
        # Acquire data
        res[index] = lockin1.dataSnap('x','y')[0]    
        # Plot I-V
        ax.cla()
        ax.plot(voltage, res)
        thread.draw()
        if thread.stopflag : break
        thread.looptime()
    
    filename = script.increment('IV.txt')    
    savetxt(filename, c_[voltage, res])

2015-04-14 16:14:56,095 - pyslave.slave - INFO - Script is running...
2015-04-14 16:15:21,089 - pyslave.slave - INFO - Script finished.
2015-04-14 16:16:08,249 - pyslave.magic - INFO - Pyslave loaded
2015-04-14 16:16:23,105 - pyslave.instruments - INFO - Opening Yokogawa 7651 GPIB0::1::INSTR as dcpwr1.
2015-04-14 16:16:23,276 - pyslave.instruments - INFO - Opening HEWLETT-PACKARD E3631A GPIB0::5::INSTR as dcpwr2.
2015-04-14 16:16:23,306 - pyslave.instruments - INFO - Opening Stanford_Research_Systems SR830 GPIB0::8::INSTR as lockin1.
2015-04-14 16:16:34,322 - pyslave.slave - INFO - Creating converted script IV_converted.py :
# Auto generated script file

# Auto generated script file

import time
fig, ax = subplots()

voltage = linspace(-25,25,501)

res = ones_like(voltage)*nan

# Main script function
def script_main(thread):
    for index,v in enumerate(voltage):
        thread.pause()
        # Change parameter
        dcpwr1.setVoltage(float(v))
        time.sleep(3)
        # Acquire data
        res[index] = lockin1.dataSnap('x','y')[0]    
        # Plot I-V
        ax.cla()
        ax.plot(voltage, res)
        thread.draw()
        if thread.stopflag : break
        thread.looptime()
    
    filename = script.increment('IV.txt')    
    savetxt(filename, c_[voltage, res])

2015-04-14 16:16:34,322 - pyslave.slave - INFO - Script is running...
2015-04-14 16:17:14,989 - pyslave.slave - INFO - Script finished.
2015-04-14 19:12:23,648 - pyslave.slave - INFO - Creating converted script IVh_converted.py :
# Auto generated script file

import time
fig, ax = subplots()

voltage = linspace(-25,-24,5)
champs = linspace(0,0.1,3)

# Main script function
def script_main(thread):
    dcpwr1.outputs[0].voltage_level = 5
    dcpwr1.outputs[0].current_limit = 0
    for indexH, h in enumerate(champs):
        res_up = ones_like(voltage)*nan
        res_dn = ones_like(voltage)*nan
        dcpwr1.outputs[0].current_limit = h
        time.sleep(1)
        for index,v in enumerate(voltage):
            thread.pause()
            # Change parameter
            dcpwr2.setVoltage(float(v))
            time.sleep(1)
            # Acquire data
            res_up[index] = lockin1.dataSnap('x','y')[0]    
            # Plot I-V
            ax.cla()
            ax.plot(voltage, res_up)
            thread.draw()
            if thread.stopflag : break
        filename = script.increment('IV_up.txt')    
        savetxt(filename, c_[voltage, res_up, ones_like(voltage)*h])
        
        for index,v in enumerate(voltage[::-1]):
            thread.pause()
            # Change parameter
            dcpwr2.setVoltage(float(v))
            time.sleep(1)
            # Acquire data
            res_dn[index] = lockin1.dataSnap('x','y')[0]    
            # Plot I-V
            ax.cla()
            ax.plot(voltage, res_up)
            ax.plot(voltage[::-1], res_dn,'r')
            thread.draw()
            if thread.stopflag : break
        filename = script.increment('IV_dn.txt')    
        savetxt(filename, c_[voltage[::-1], res_dn, ones_like(voltage)*h])
        
        thread.looptime()

2015-04-14 19:12:23,650 - pyslave.slave - INFO - Script is running...
2015-04-14 19:12:23,701 - pyslave.slave - INFO - Script finished with an error.
2015-04-14 19:14:07,095 - pyslave.slave - INFO - Creating converted script IVh_converted.py :
# Auto generated script file

import time
fig, ax = subplots()

voltage = linspace(-15,15,301)
champs = linspace(0,0.5,50)

# Main script function
def script_main(thread):
    dcpwr2.outputs[0].voltage_level = 5.5
    dcpwr2.outputs[0].current_limit = 0
    for indexH, h in enumerate(champs):
        res_up = ones_like(voltage)*nan
        res_dn = ones_like(voltage)*nan
        dcpwr2.outputs[0].current_limit = h
        time.sleep(1)
        for index,v in enumerate(voltage):
            thread.pause()
            # Change parameter
            dcpwr1.setVoltage(float(v))
            time.sleep(1)
            # Acquire data
            res_up[index] = lockin1.dataSnap('x','y')[0]    
            # Plot I-V
            ax.cla()
            ax.plot(voltage, res_up)
            thread.draw()
            if thread.stopflag : break
        filename = script.increment('IV_up.txt')    
        savetxt(filename, c_[voltage, res_up, ones_like(voltage)*h])
        
        for index,v in enumerate(voltage[::-1]):
            thread.pause()
            # Change parameter
            dcpwr1.setVoltage(float(v))
            time.sleep(1)
            # Acquire data
            res_dn[index] = lockin1.dataSnap('x','y')[0]    
            # Plot I-V
            ax.cla()
            ax.plot(voltage, res_up)
            ax.plot(voltage[::-1], res_dn,'r')
            thread.draw()
            if thread.stopflag : break
        filename = script.increment('IV_dn.txt')    
        savetxt(filename, c_[voltage[::-1], res_dn, ones_like(voltage)*h])
        
        thread.looptime()

2015-04-14 19:14:07,096 - pyslave.slave - INFO - Script is running...
2015-04-14 19:15:47,250 - pyslave.slave - INFO - Script forced to terminate.
2015-04-14 19:15:47,252 - pyslave.slave - INFO - Script finished.
2015-04-14 19:16:09,359 - pyslave.slave - INFO - Creating converted script IVh_converted.py :
# Auto generated script file

import time
fig, ax = subplots()

voltage = linspace(-15,15,601)
champs = linspace(0,0.5,25)

# Main script function
def script_main(thread):
    dcpwr2.outputs[0].voltage_level = 5.5
    dcpwr2.outputs[0].current_limit = 0
    for indexH, h in enumerate(champs):
        res_up = ones_like(voltage)*nan
        res_dn = ones_like(voltage)*nan
        dcpwr2.outputs[0].current_limit = h
        time.sleep(1)
        for index,v in enumerate(voltage):
            thread.pause()
            # Change parameter
            dcpwr1.setVoltage(float(v))
            time.sleep(1)
            # Acquire data
            res_up[index] = lockin1.dataSnap('x','y')[0]    
            # Plot I-V
            ax.cla()
            ax.plot(voltage, res_up)
            thread.draw()
            if thread.stopflag : break
        filename = script.increment('IV_up.txt')    
        savetxt(filename, c_[voltage, res_up, ones_like(voltage)*h])
        
        for index,v in enumerate(voltage[::-1]):
            thread.pause()
            # Change parameter
            dcpwr1.setVoltage(float(v))
            time.sleep(1)
            # Acquire data
            res_dn[index] = lockin1.dataSnap('x','y')[0]    
            # Plot I-V
            ax.cla()
            ax.plot(voltage, res_up)
            ax.plot(voltage[::-1], res_dn,'r')
            thread.draw()
            if thread.stopflag : break
        filename = script.increment('IV_dn.txt')    
        savetxt(filename, c_[voltage[::-1], res_dn, ones_like(voltage)*h])
        
        thread.looptime()

2015-04-14 19:16:09,361 - pyslave.slave - INFO - Script is running...
